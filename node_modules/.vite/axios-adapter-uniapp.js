import {
  __commonJS,
  __spreadProps,
  __spreadValues,
  init_define_process_env_UNI_STAT_TITLE_JSON
} from "./chunk-FX2CGMWH.js";

// ../../../HBuilderx项目/网易云/node_modules/axios-adapter-uniapp/helper/isMultiUpload.js
var require_isMultiUpload = __commonJS({
  "../../../HBuilderx\u9879\u76EE/\u7F51\u6613\u4E91/node_modules/axios-adapter-uniapp/helper/isMultiUpload.js"(exports, module) {
    init_define_process_env_UNI_STAT_TITLE_JSON();
    module.exports = function isMultiUpload(config) {
      return Array.isArray(config.files) && config.files.length > 0;
    };
  }
});

// ../../../HBuilderx项目/网易云/node_modules/axios-adapter-uniapp/helper/isUploadFile.js
var require_isUploadFile = __commonJS({
  "../../../HBuilderx\u9879\u76EE/\u7F51\u6613\u4E91/node_modules/axios-adapter-uniapp/helper/isUploadFile.js"(exports, module) {
    init_define_process_env_UNI_STAT_TITLE_JSON();
    var isMultiUpload = require_isMultiUpload();
    module.exports = function isUploadFile(config) {
      if (config.method === "post") {
        if (config.filePath && config.name)
          return true;
        if (isMultiUpload(config))
          return true;
      }
      return false;
    };
  }
});

// ../../../HBuilderx项目/网易云/node_modules/axios-adapter-uniapp/node_modules/axios/lib/core/enhanceError.js
var require_enhanceError = __commonJS({
  "../../../HBuilderx\u9879\u76EE/\u7F51\u6613\u4E91/node_modules/axios-adapter-uniapp/node_modules/axios/lib/core/enhanceError.js"(exports, module) {
    init_define_process_env_UNI_STAT_TITLE_JSON();
    "use strict";
    module.exports = function enhanceError(error, config, code, request, response) {
      error.config = config;
      if (code) {
        error.code = code;
      }
      error.request = request;
      error.response = response;
      error.isAxiosError = true;
      error.toJSON = function toJSON() {
        return {
          message: this.message,
          name: this.name,
          description: this.description,
          number: this.number,
          fileName: this.fileName,
          lineNumber: this.lineNumber,
          columnNumber: this.columnNumber,
          stack: this.stack,
          config: this.config,
          code: this.code
        };
      };
      return error;
    };
  }
});

// ../../../HBuilderx项目/网易云/node_modules/axios-adapter-uniapp/node_modules/axios/lib/core/createError.js
var require_createError = __commonJS({
  "../../../HBuilderx\u9879\u76EE/\u7F51\u6613\u4E91/node_modules/axios-adapter-uniapp/node_modules/axios/lib/core/createError.js"(exports, module) {
    init_define_process_env_UNI_STAT_TITLE_JSON();
    "use strict";
    var enhanceError = require_enhanceError();
    module.exports = function createError(message, config, code, request, response) {
      var error = new Error(message);
      return enhanceError(error, config, code, request, response);
    };
  }
});

// ../../../HBuilderx项目/网易云/node_modules/axios-adapter-uniapp/node_modules/axios/lib/core/settle.js
var require_settle = __commonJS({
  "../../../HBuilderx\u9879\u76EE/\u7F51\u6613\u4E91/node_modules/axios-adapter-uniapp/node_modules/axios/lib/core/settle.js"(exports, module) {
    init_define_process_env_UNI_STAT_TITLE_JSON();
    "use strict";
    var createError = require_createError();
    module.exports = function settle(resolve, reject, response) {
      var validateStatus = response.config.validateStatus;
      if (!response.status || !validateStatus || validateStatus(response.status)) {
        resolve(response);
      } else {
        reject(createError("Request failed with status code " + response.status, response.config, null, response.request, response));
      }
    };
  }
});

// ../../../HBuilderx项目/网易云/node_modules/axios-adapter-uniapp/node_modules/axios/lib/helpers/bind.js
var require_bind = __commonJS({
  "../../../HBuilderx\u9879\u76EE/\u7F51\u6613\u4E91/node_modules/axios-adapter-uniapp/node_modules/axios/lib/helpers/bind.js"(exports, module) {
    init_define_process_env_UNI_STAT_TITLE_JSON();
    "use strict";
    module.exports = function bind(fn, thisArg) {
      return function wrap() {
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i];
        }
        return fn.apply(thisArg, args);
      };
    };
  }
});

// ../../../HBuilderx项目/网易云/node_modules/axios-adapter-uniapp/node_modules/axios/lib/utils.js
var require_utils = __commonJS({
  "../../../HBuilderx\u9879\u76EE/\u7F51\u6613\u4E91/node_modules/axios-adapter-uniapp/node_modules/axios/lib/utils.js"(exports, module) {
    init_define_process_env_UNI_STAT_TITLE_JSON();
    "use strict";
    var bind = require_bind();
    var toString = Object.prototype.toString;
    function isArray(val) {
      return toString.call(val) === "[object Array]";
    }
    function isUndefined(val) {
      return typeof val === "undefined";
    }
    function isBuffer(val) {
      return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && typeof val.constructor.isBuffer === "function" && val.constructor.isBuffer(val);
    }
    function isArrayBuffer(val) {
      return toString.call(val) === "[object ArrayBuffer]";
    }
    function isFormData(val) {
      return typeof FormData !== "undefined" && val instanceof FormData;
    }
    function isArrayBufferView(val) {
      var result;
      if (typeof ArrayBuffer !== "undefined" && ArrayBuffer.isView) {
        result = ArrayBuffer.isView(val);
      } else {
        result = val && val.buffer && val.buffer instanceof ArrayBuffer;
      }
      return result;
    }
    function isString(val) {
      return typeof val === "string";
    }
    function isNumber(val) {
      return typeof val === "number";
    }
    function isObject(val) {
      return val !== null && typeof val === "object";
    }
    function isPlainObject(val) {
      if (toString.call(val) !== "[object Object]") {
        return false;
      }
      var prototype = Object.getPrototypeOf(val);
      return prototype === null || prototype === Object.prototype;
    }
    function isDate(val) {
      return toString.call(val) === "[object Date]";
    }
    function isFile(val) {
      return toString.call(val) === "[object File]";
    }
    function isBlob(val) {
      return toString.call(val) === "[object Blob]";
    }
    function isFunction(val) {
      return toString.call(val) === "[object Function]";
    }
    function isStream(val) {
      return isObject(val) && isFunction(val.pipe);
    }
    function isURLSearchParams(val) {
      return typeof URLSearchParams !== "undefined" && val instanceof URLSearchParams;
    }
    function trim(str) {
      return str.trim ? str.trim() : str.replace(/^\s+|\s+$/g, "");
    }
    function isStandardBrowserEnv() {
      if (typeof navigator !== "undefined" && (navigator.product === "ReactNative" || navigator.product === "NativeScript" || navigator.product === "NS")) {
        return false;
      }
      return typeof window !== "undefined" && typeof document !== "undefined";
    }
    function forEach(obj, fn) {
      if (obj === null || typeof obj === "undefined") {
        return;
      }
      if (typeof obj !== "object") {
        obj = [obj];
      }
      if (isArray(obj)) {
        for (var i = 0, l = obj.length; i < l; i++) {
          fn.call(null, obj[i], i, obj);
        }
      } else {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) {
            fn.call(null, obj[key], key, obj);
          }
        }
      }
    }
    function merge() {
      var result = {};
      function assignValue(val, key) {
        if (isPlainObject(result[key]) && isPlainObject(val)) {
          result[key] = merge(result[key], val);
        } else if (isPlainObject(val)) {
          result[key] = merge({}, val);
        } else if (isArray(val)) {
          result[key] = val.slice();
        } else {
          result[key] = val;
        }
      }
      for (var i = 0, l = arguments.length; i < l; i++) {
        forEach(arguments[i], assignValue);
      }
      return result;
    }
    function extend(a, b, thisArg) {
      forEach(b, function assignValue(val, key) {
        if (thisArg && typeof val === "function") {
          a[key] = bind(val, thisArg);
        } else {
          a[key] = val;
        }
      });
      return a;
    }
    function stripBOM(content) {
      if (content.charCodeAt(0) === 65279) {
        content = content.slice(1);
      }
      return content;
    }
    module.exports = {
      isArray,
      isArrayBuffer,
      isBuffer,
      isFormData,
      isArrayBufferView,
      isString,
      isNumber,
      isObject,
      isPlainObject,
      isUndefined,
      isDate,
      isFile,
      isBlob,
      isFunction,
      isStream,
      isURLSearchParams,
      isStandardBrowserEnv,
      forEach,
      merge,
      extend,
      trim,
      stripBOM
    };
  }
});

// ../../../HBuilderx项目/网易云/node_modules/axios-adapter-uniapp/node_modules/axios/lib/helpers/buildURL.js
var require_buildURL = __commonJS({
  "../../../HBuilderx\u9879\u76EE/\u7F51\u6613\u4E91/node_modules/axios-adapter-uniapp/node_modules/axios/lib/helpers/buildURL.js"(exports, module) {
    init_define_process_env_UNI_STAT_TITLE_JSON();
    "use strict";
    var utils = require_utils();
    function encode(val) {
      return encodeURIComponent(val).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
    }
    module.exports = function buildURL(url, params, paramsSerializer) {
      if (!params) {
        return url;
      }
      var serializedParams;
      if (paramsSerializer) {
        serializedParams = paramsSerializer(params);
      } else if (utils.isURLSearchParams(params)) {
        serializedParams = params.toString();
      } else {
        var parts = [];
        utils.forEach(params, function serialize(val, key) {
          if (val === null || typeof val === "undefined") {
            return;
          }
          if (utils.isArray(val)) {
            key = key + "[]";
          } else {
            val = [val];
          }
          utils.forEach(val, function parseValue(v) {
            if (utils.isDate(v)) {
              v = v.toISOString();
            } else if (utils.isObject(v)) {
              v = JSON.stringify(v);
            }
            parts.push(encode(key) + "=" + encode(v));
          });
        });
        serializedParams = parts.join("&");
      }
      if (serializedParams) {
        var hashmarkIndex = url.indexOf("#");
        if (hashmarkIndex !== -1) {
          url = url.slice(0, hashmarkIndex);
        }
        url += (url.indexOf("?") === -1 ? "?" : "&") + serializedParams;
      }
      return url;
    };
  }
});

// ../../../HBuilderx项目/网易云/node_modules/axios-adapter-uniapp/node_modules/axios/lib/helpers/isAbsoluteURL.js
var require_isAbsoluteURL = __commonJS({
  "../../../HBuilderx\u9879\u76EE/\u7F51\u6613\u4E91/node_modules/axios-adapter-uniapp/node_modules/axios/lib/helpers/isAbsoluteURL.js"(exports, module) {
    init_define_process_env_UNI_STAT_TITLE_JSON();
    "use strict";
    module.exports = function isAbsoluteURL(url) {
      return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
    };
  }
});

// ../../../HBuilderx项目/网易云/node_modules/axios-adapter-uniapp/node_modules/axios/lib/helpers/combineURLs.js
var require_combineURLs = __commonJS({
  "../../../HBuilderx\u9879\u76EE/\u7F51\u6613\u4E91/node_modules/axios-adapter-uniapp/node_modules/axios/lib/helpers/combineURLs.js"(exports, module) {
    init_define_process_env_UNI_STAT_TITLE_JSON();
    "use strict";
    module.exports = function combineURLs(baseURL, relativeURL) {
      return relativeURL ? baseURL.replace(/\/+$/, "") + "/" + relativeURL.replace(/^\/+/, "") : baseURL;
    };
  }
});

// ../../../HBuilderx项目/网易云/node_modules/axios-adapter-uniapp/node_modules/axios/lib/core/buildFullPath.js
var require_buildFullPath = __commonJS({
  "../../../HBuilderx\u9879\u76EE/\u7F51\u6613\u4E91/node_modules/axios-adapter-uniapp/node_modules/axios/lib/core/buildFullPath.js"(exports, module) {
    init_define_process_env_UNI_STAT_TITLE_JSON();
    "use strict";
    var isAbsoluteURL = require_isAbsoluteURL();
    var combineURLs = require_combineURLs();
    module.exports = function buildFullPath(baseURL, requestedURL) {
      if (baseURL && !isAbsoluteURL(requestedURL)) {
        return combineURLs(baseURL, requestedURL);
      }
      return requestedURL;
    };
  }
});

// ../../../HBuilderx项目/网易云/node_modules/axios-adapter-uniapp/helper/format.js
var require_format = __commonJS({
  "../../../HBuilderx\u9879\u76EE/\u7F51\u6613\u4E91/node_modules/axios-adapter-uniapp/helper/format.js"(exports, module) {
    init_define_process_env_UNI_STAT_TITLE_JSON();
    var settle = require_settle();
    var buildURL = require_buildURL();
    var buildFullPath = require_buildFullPath();
    var isUploadFile = require_isUploadFile();
    module.exports = function format(config, resolve, reject) {
      const fullPath = buildFullPath(config.baseURL, config.url);
      const requestHeaders = config.headers;
      const uniConfig = __spreadProps(__spreadValues({}, config), {
        url: buildURL(fullPath, config.params, config.paramsSerializer),
        header: requestHeaders
      });
      if (isUploadFile(config)) {
        delete requestHeaders["Content-Type"];
        if (config.formData) {
          uniConfig.formData = config.formData;
        } else {
          if (typeof config.data === "string") {
            uniConfig.formData = JSON.parse(config.data);
          } else {
            uniConfig.formData = config.data;
          }
        }
      } else if (config.method === "get") {
        uniConfig.data = config.data ? config.data : config.params;
      } else {
        uniConfig.data = config.data;
      }
      if (config.auth) {
        var username = config.auth.username || "";
        var password = unescape(encodeURIComponent(config.auth.password)) || "";
        requestHeaders.Authorization = "Basic " + btoa(username + ":" + password);
      }
      uniConfig.complete = function(response) {
        var result = {
          data: response.data,
          status: response.statusCode,
          statusText: response.errMsg,
          header: response.header,
          config
        };
        settle(resolve, reject, result);
      };
      return uniConfig;
    };
  }
});

// ../../../HBuilderx项目/网易云/node_modules/axios-adapter-uniapp/index.js
var require_axios_adapter_uniapp = __commonJS({
  "../../../HBuilderx\u9879\u76EE/\u7F51\u6613\u4E91/node_modules/axios-adapter-uniapp/index.js"(exports, module) {
    init_define_process_env_UNI_STAT_TITLE_JSON();
    "use strict";
    var isUploadFile = require_isUploadFile();
    var format = require_format();
    function uniappAdapter(config = {}) {
      return new Promise(function dispatchUniApp(resolve, reject) {
        const uniConfig = format(config, resolve, reject);
        let requestTask = null;
        if (config.cancelToken) {
          config.cancelToken.promise.then(function onCanceled(cancel) {
            if (!requestTask) {
              return;
            }
            requestTask.abort();
            reject(cancel);
            requestTask = null;
          });
        }
        if (isUploadFile(config)) {
          requestTask = uni.uploadFile(uniConfig);
        } else {
          requestTask = uni.request(uniConfig);
        }
      });
    }
    module.exports = uniappAdapter;
    module.exports.default = uniappAdapter;
  }
});

// dep:axios-adapter-uniapp
init_define_process_env_UNI_STAT_TITLE_JSON();
var axios_adapter_uniapp_default = require_axios_adapter_uniapp();
export {
  axios_adapter_uniapp_default as default
};
//# sourceMappingURL=axios-adapter-uniapp.js.map
